/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 *
 * @author ksala
 */
public class Terminal extends javax.swing.JFrame {

    /**
     * Creates new form Terminal
     */
    private static int promptIndex;
    public boolean entry;
    public String text;
    public MainFrame m;
    public Terminal(MainFrame m) {
        this.m=m;
        text = "";
        entry = false;
        initComponents();
        terminal.setText("> ");
        promptIndex = terminal.getText().length();
        
        terminal.setFont(new Font("Monospaced", Font.PLAIN, 14));
        terminal.setBackground(Color.BLACK);
        terminal.setForeground(Color.WHITE);
        terminal.setCaretColor(Color.WHITE);

        terminal.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    e.consume();
                    String command = terminal.getText().substring(promptIndex).trim();
                    if(command.toUpperCase().matches("^(EXIT|QUIT)")){
                        nothing();
                        terminal.setText("> ");
                        promptIndex = terminal.getText().length();
                    }
                    if(command.toUpperCase().matches("^(CLS|CLEAR)")){
                        terminal.setText("> ");
                        promptIndex = terminal.getText().length();
                    }
                    else{
                        if(entry){
                            text = command;
                            entry = false;
                            terminal.append("\n> ");
                            promptIndex = terminal.getText().length();
                            m.listen(returnValue());
                        }
                        else{
                            terminal.append("\nError: Command not found...\n> ");
                            promptIndex = terminal.getText().length();
                        }
                    }
                } 
                else if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE || e.getKeyCode() == KeyEvent.VK_DELETE) {
                    if (terminal.getCaretPosition() <= promptIndex) {
                        e.consume();
                    }
                } 
                else if (terminal.getCaretPosition() < promptIndex) {
                    terminal.setCaretPosition(terminal.getText().length());
                }
            }
        });
    }

    public void print(String text){
        terminal.append("\n" + text + "\n> ");
        promptIndex = terminal.getText().length();
        this.setVisible(true);
    }
    
    public int returnValue(){
        try{return Integer.parseInt(this.text);}
        catch(Exception e){
            return -99999999;
        }
    }
    
    public void input(){
        this.entry = true;
        this.setVisible(true);
    }
    
    public void nothing(){
        this.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        terminal = new javax.swing.JTextArea();

        setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        terminal.setColumns(20);
        terminal.setRows(5);
        jScrollPane1.setViewportView(terminal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea terminal;
    // End of variables declaration//GEN-END:variables
}
